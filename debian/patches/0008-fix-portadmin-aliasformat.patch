diff --git a/python/nav/django/settings.py b/python/nav/django/settings.py
index d8df115e1..b2477700b 100644
--- a/python/nav/django/settings.py
+++ b/python/nav/django/settings.py
@@ -234,6 +234,7 @@ INSTALLED_APPS = (
     'nav.auditlog',
     'nav.web.macwatch',
     'nav.web.geomap',
+    'nav.web.portadmin',
 )
 
 if tuple(django.VERSION[:2]) == (1, 7):
diff --git a/python/nav/etc/portadmin/aliasformat.html b/python/nav/etc/portadmin/aliasformat.html
deleted file mode 100644
index 3e3232f0e..000000000
--- a/python/nav/etc/portadmin/aliasformat.html
+++ /dev/null
@@ -1,3 +0,0 @@
-<div class="alert-box warning with-icon">
-  Validation of port descriptions is enabled. The format must match <code>{{ ifaliasformat }}</code>.
-</div>
diff --git a/python/nav/web/portadmin/templates/portadmin/aliasformat.html b/python/nav/web/portadmin/templates/portadmin/aliasformat.html
new file mode 100644
index 000000000..3e3232f0e
--- /dev/null
+++ b/python/nav/web/portadmin/templates/portadmin/aliasformat.html
@@ -0,0 +1,3 @@
+<div class="alert-box warning with-icon">
+  Validation of port descriptions is enabled. The format must match <code>{{ ifaliasformat }}</code>.
+</div>
diff --git a/python/nav/web/portadmin/utils.py b/python/nav/web/portadmin/utils.py
index a6a080d7e..23d3ad392 100644
--- a/python/nav/web/portadmin/utils.py
+++ b/python/nav/web/portadmin/utils.py
@@ -18,9 +18,7 @@ import re
 import configparser
 import logging
 
-import django.template
-
-from django.template.loaders.filesystem import Loader
+from django.template import loader
 
 from nav.config import find_configfile
 from nav.django.utils import is_admin
@@ -273,12 +271,7 @@ def get_ifaliasformat(config=None):
 
 def get_aliastemplate():
     """Fetch template for displaying ifalias format as help to user"""
-    templatepath = find_configfile("portadmin")
-    templatename = "aliasformat.html"
-    loader = Loader()
-    rawdata, _ = loader.load_template_source(templatename, [templatepath])
-    tmpl = django.template.Template(rawdata)
-    return tmpl
+    return loader.get_template("portadmin/aliasformat.html")
 
 
 def save_to_database(interfaces):
